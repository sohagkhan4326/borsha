const axios = require('axios');

module.exports.config = {
  name: "bot",
  version: "2.0.0",
  permission: 0,
  credits: "Dipto",
  description: "talk with baby and teach it",
  prefix: false,
  category: "system",
  usages: "[any message] OR\nteach [YourMessage] - [Reply1] [Reply2], [Reply3]... OR\nremove [YourMessage] OR\nrm [YourMessage] - [indexNumber] OR\nmsg OR\nlist OR\nedit [YourMessage] - [NewReply]",
  cooldowns: 5,
};

module.exports.run = async ({ api, event, args }) => {
  const dipto = args.join(" ").toLowerCase();
  const uid = event.senderID;
  let command;
  let comd;
  let final;
  try{
  if(!args[0]){
    const ran = [" рждрзБржЗ рж╕рж╛ржд ржжрж┐ржи ржзрж░рзЗ ржЧрзЛрж╕рж▓ ржХрж░рж┐рж╕ ржирж╛ ржпрж╛ ржЧрзЛрж╕рж▓ ржХрж░рзЗ ржЖрзЯЁЯШ╖", " ржХрж┐ ржЧрзЛ рж╕рзЛржирж╛ ржЖржорж╛ржХрзЗ ржбрж╛ржХржЫ ржХрзЗржирзЛ", "ржмрж╛рж░ ржмрж╛рж░ ржЖржорж╛ржХрзЗ ржбрж╛ржХрж╕ ржХрзЗржиЁЯШб","ржЖрж╣ рж╢рзЛржирж╛ ржЖржорж╛рж░ ржЖржорж╛ржХрзЗ ржПрждрзЛ ржбрж╛ржХрзНрждрж╛ржЫрзЛ ржХрзЗржирзЛ ржЖрж╕рзЛ ржмрзБржХрзЗ ржЖрж╢рзЛЁЯе▒","рж╣рзБржо ржЬрж╛ржи рждрзЛржорж╛рж░ ржПржХржЯрж╛ ржкрж┐ржХ ржжрзЗржУ рж╕рзНржЯрзЛрж░рж┐ рждрзЗ ржжрж┐ржорзБ ЁЯШЗЁЯдЧЁЯШШ"," ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ржмрж▓рзЗржи ржЖржкржирж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐","ржЖржорж╛ржХрзЗ ржПрждрзЛ ржирж╛ ржбрзЗржХрзЗ ржмрж╕ рж╕рзЛрж╣рж╛ржЧ ржПржХржЯрж╛ Gf ржжрзЗ ЁЯЩД","jang hanga korba","jang bal falabaЁЯЩВ", "ржПржд ржбрж╛ржХрзЛ ржХрзЗржирзЛ ЁЯШС","ржУржЗ рждрзБржорж┐ single ржирж╛?ЁЯл╡ЁЯди","-ржЪрзМржзрзБрж░рзА рж╕рж╛рж╣рзЗржм ржЖржорж┐ ржЧрж░рж┐ржм рж╣рждрзЗ ржкрж╛рж░рж┐.ЁЯШ╛ЁЯдн\nржХрж┐ржирзНрждрзБ -ржмрзЬрж▓рзЛржХ ржирж╛.ЁЯе╣ЁЯШл","suno ржзрзИрж░рзНржп ржЖрж░ рж╕рж╣рзНржп ржЬрзАржмржирзЗрж░ рж╕ржмЁЯШКЁЯМ╗ЁЯТЬ","babu khuda lagseЁЯе║","kisseЁЯШТ","ржмрзЗрж╢рж┐ bot Bot ржХрж░рж▓рзЗ leave ржирж┐ржмрзЛ ржХрж┐ржирзНрждрзБЁЯШТЁЯШТ" , "рж╢рзБржиржмрзЛ ржирж╛ЁЯШ╝ рждрзБржорж┐ ржЖржорж╛ржХрзЗ ржкрзНрж░рзЗржо ржХрж░рж╛ржЗ ржжрж╛ржУ ржирж┐ЁЯе║ ржкржЪрж╛ рждрзБржорж┐ЁЯе║ " , "ржЖржорж┐ ржЖржмрж╛рж▓ ржжрзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛,okЁЯШТ" , "ржПржд ржХрж╛ржЫрзЗржУ ржПрж╕рзЛ ржирж╛,ржкрзНрж░рзЗржо ржП ржкрж░рзЗ ржпрж╛ржмрзЛ рждрзЛ ЁЯЩИ" , "Bolo Babu, рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ? ЁЯЩИЁЯТЛ " , "ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржпрж╝ ржХрж┐ржирзНрждрзБЁЯШС", "рж╣рж╛ ржмрж▓рзЛЁЯШТ,ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ЁЯШРЁЯШС?" , "ржПрждрзЛ ржбрж╛ржХржЫрж┐рж╕ ржХрзЛржирзЛ?ржЧрж╛рж▓рж┐ рж╢рзБржиржмрж┐ ржирж╛ржХрж┐? ЁЯдм","ржЖрж░рзЗ Bolo ржЖржорж╛рж░ ржЬрж╛ржи ,ржХрзЗржоржи ржЖржЫрзЛ?ЁЯШЪ " , "botржмрж▓рзЗ ржЕрж╕ржорзНржорж╛ржи ржХрж░ржЪрзНржЫрж┐ржЫ,ЁЯШ░ЁЯШ┐" , "Hop bedaЁЯШ╛,Boss ржмрж▓ bossЁЯШ╝" , "ржЪрзБржк ржерж╛ржХ ,ржирж╛ржЗ рждрзЛ рждрзЛрж░ ржжрж╛ржд ржнрзЗржЧрзЗ ржжрж┐ржмрзЛ ржХрж┐ржирзНрждрзБ" , "bot ржирж╛ , ржЬрж╛ржирзБ ржмрж▓ ржЬрж╛ржирзБ ЁЯШШ " , "ржмрж╛рж░ ржмрж╛рж░ Disturb ржХрж░рзЗржЫрж┐рж╕ ржХрзЛржирзЛЁЯШ╛,ржЖржорж╛рж░ ржЬрж╛ржирзБ ржПрж░ рж╕рж╛ржерзЗ ржмрзНржпрж╛рж╕рзНржд ржЖрж╕рж┐ЁЯШЛ" , "ржЖржорж┐ ржЧрж░рзАржм r рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛ЁЯШ╝ЁЯШ╝" , "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ,ржЖржорж┐ ржХрж┐ржирзНрждрзВ ржХрж┐рж╕ ржХрж░рзЗ ржжрзЗржмрзЛЁЯШШ " , "ржЖрж░рзЗ ржЖржорж┐ ржоржЬрж╛ ржХрж░рж╛рж░ mood ржП ржирж╛ржЗЁЯШТ" , "рж╣рж╛ ржЬрж╛ржирзБ ржПржЗржжрж┐ржХ ржП ржЖрж╕рзЛ ржХрж┐рж╕ ржжрзЗржЗЁЯдн ЁЯШШ" , "ржжрзВрж░рзЗ ржпрж╛, рждрзЛрж░ ржХрзЛржирзЛ ржХрж╛ржЬ ржирж╛ржЗ, рж╢рзБржзрзБ bot bot ржХрж░рж┐рж╕  ЁЯШЙЁЯШЛЁЯдг" , "рждрзЛрж░ ржХржерж╛ рждрзЛрж░ ржмрж╛ржбрж╝рж┐ ржХрзЗржЙ рж╢рзБржирзЗ ржирж╛ ,рждрзЛ ржЖржорж┐ ржХрзЛржирзЛ рж╢рзБржиржмрзЛ ?ЁЯдФЁЯШВ " , "ржЖржорж╛ржХрзЗ ржбрзЗржХрзЛ ржирж╛,ржЖржорж┐ ржмрзНржпрж╛рж╕рзНржд ржЖрж╕рж┐" , "ржХрж┐ рж╣рж▓рзЛ ,ржорж┐рж╕ ржЯрж┐рж╕ ржХрж░ржЪрзНржЫрж┐рж╕ ржирж╛ржХрж┐ЁЯдг" ,"ЁЯРдЁЯРд" ,"ЁЯРТЁЯРТЁЯРТ","ржжрзВрж░рзЗ ржЧрж┐рзЯрзЗ ржорж░ЁЯШТ","ЁЯШТЁЯШТ","bye","mb ney bye","mewwЁЯР▒"];
    const r = ran[Math.floor(Math.random() * ran.length)];
return api.sendMessage(r,event.threadID,event.messageID);
  }
//-------------------------------------------//
  else if (args[0] === 'remove') {
  const fina = dipto.replace("remove ", "");
        const respons = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?remove=${fina}`);
        const dat = respons.data.message;
        api.sendMessage(`${dat}`, event.threadID, event.messageID);
    }
  //------------------------------------//
else if (args[0] === 'rm' && dipto.includes('-')) {
      const fina = dipto.replace("rm ", "");
     const fi = fina.split(' - ')[0]
     const f = fina.split(' - ')[1]
        const respons = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?remove=${fi}&index=${f}`);
        const da = respons.data.message;
        api.sendMessage(`${da}`, event.threadID, event.messageID);
}
    //-------------------------------------//
   else if (args[0] === 'list') {
        const respo = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?list=all`);
        const d = respo.data.length;
        api.sendMessage(`Total Teach ${d}`, event.threadID, event.messageID);
    }
    //-------------------------------------//
      else if (args[0] === 'msg' || args[0] === 'message') {
  const fuk = dipto.replace("msg ", "");
        const respo = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?list=${fuk}`);
        const d = respo.data.data;
        api.sendMessage(`Message ${fuk} = ${d}`, event.threadID, event.messageID);
      }
    //-------------------------------------//
    else if (args[0] === 'edit') {
        const command = dipto.split(' - ')[1];
        if (command.length < 2) {
            return api.sendMessage('тЭМ | Invalid format! Use edit [YourMessage] - [NewReply]', event.threadID, event.messageID);
        }
        const res = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?edit=${args[1]}&replace=${command}`);
        const dA = res.data.message;
        api.sendMessage(`changed ${dA}`, event.threadID, event.messageID);
    } 
   //-------------------------------------//

    else if (args[0] === 'teach' && args[1] !== 'amar'){
       command = dipto.split(' - ')[1];
      comd = dipto.split(' - ')[0];
      final = comd.replace("teach ", "");
            if (command.length < 2) {
            return api.sendMessage('тЭМ | Invalid format! Use [YourMessage] - [Reply1], [Reply2], [Reply3]... OR remove [YourMessage] OR list OR edit [YourMessage] - [NewReply]', event.threadID, event.messageID);
        }
        const re = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?teach=${final}&reply=${command}`);
        const tex = re.data.message;
        api.sendMessage(`тЬЕ Replies added ${tex}`, event.threadID, event.messageID);
    }
      //-------------------------------------//
else if (args[0] === 'teach' && args[1] === 'amar'){
     command = dipto.split(' - ')[1];
      comd = dipto.split(' - ')[0];
      final = comd.replace("teach ", "");
        if (command.length < 2) {
            return api.sendMessage('тЭМ | Invalid format! Use [YourMessage] - [Reply1], [Reply2], [Reply3]... OR remove [YourMessage] OR list OR edit [YourMessage] - [NewReply]', event.threadID, event.messageID);
        }
        const re = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?teach=${final}&senderID=${uid}&reply=${command}`);
        const tex = re.data.message;
        api.sendMessage(`тЬЕ Replies added ${tex}`, event.threadID, event.messageID);
    }
 //-------------------------------------//
    else if (dipto.includes('amar name ki') || dipto.includes('amr nam ki') || dipto.includes('amar nam ki') || dipto.includes('amr name ki')){
    const response = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?text=amar name ki&senderID=${uid}`);
    const data = response.data.reply;
    api.sendMessage(`${data}`, event.threadID, event.messageID);
       }
      //----------------------------------//
  else {
    const response = await axios.get(`https://noobs-apihouse.onrender.com/dipto/baby?text=${dipto}`);
    const data = response.data.reply;
    api.sendMessage(`${data}`, event.threadID, event.messageID);
       }
  } catch (e){
    console.log(e)
    api.sendMessage("Check console for error ",event.threadID,event.messageID);
  }
};
